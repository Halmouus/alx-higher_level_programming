==========================================
        CASE TESTS FOR 7-base_geometry
==========================================

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("my_int", 'yes')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/Test/0x0A-python-inheritance/7-base_geometry.py", line 15, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: my_int must be an integer
>>> bg.integer_validator(3, 18)
>>> bg.integer_validator(0, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/Test/0x0A-python-inheritance/7-base_geometry.py", line 17, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: 0 must be greater than 0
>>> bg.integer_validator("my_int", -25)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/workspaces/Test/0x0A-python-inheritance/7-base_geometry.py", line 17, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: my_int must be greater than 0
